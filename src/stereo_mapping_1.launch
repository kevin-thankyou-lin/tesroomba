<!-- <launch>
   <! Backward compatibility launch file, use "rtabmap.launch rgbd:=false stereo:=true" instead -->

   <!-- Your camera should be calibrated and publishing rectified left and right 
        images + corresponding camera_info msgs. You can use stereo_image_proc for image rectification.
        Example:
           $ roslaunch rtabmap_ros bumblebee.launch -->
 
  <!-- Choose visualization -->
  <arg name="rtabmapviz"              default="true" />
  <arg name="rviz"                    default="false" />

  <!-- Localization-only mode -->
  <arg name="localization"            default="false"/>

  <!-- Corresponding config files -->
  <arg name="rtabmapviz_cfg"          default="$(find rtabmap_ros)/launch/config/rgbd_gui.ini" />
  <arg name="rviz_cfg"                default="$(find rtabmap_ros)/launch/config/rgbd.rviz" />

  <arg name="frame_id"                default="base_footprint"/>     <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
  <arg name="database_path"           default="~/.ros/rtabmap.db"/>
  <arg name="rtabmap_args"            default=""/>   <!-- delete_db_on_start, udebug -->
  <arg name="launch_prefix"           default=""/>
  <arg name="approx_sync"             default="false"/>         <!-- if timestamps of the input topics are not synchronized -->

  <arg name="stereo_namespace"        default=""/>
  <arg name="left_image_topic"        default="/stereo/left/image_rect_color" />
  <arg name="right_image_topic"       default="/stereo/right/image_rect" />      <!-- using grayscale image for efficiency -->
  <arg name="left_camera_info_topic"  default="/stereo/left/camera_info" />
  <arg name="right_camera_info_topic" default="/stereo/right/camera_info" />
  <arg name="compressed"              default="false"/>

  <arg name="subscribe_scan"          default="false"/>         <!-- Assuming 2D scan if set, rtabmap will do 3DoF mapping instead of 6DoF -->
  <arg name="scan_topic"              default="/scan"/>

  <arg name="subscribe_scan_cloud"    default="false"/>         <!-- Assuming 3D scan if set -->
  <arg name="scan_cloud_topic"        default="/scan_cloud"/>

  <arg name="visual_odometry"         default="false"/>          <!-- Generate visual odometry -->
  <arg name="odom_topic"              default="/odom"/>         <!-- Odometry topic used if visual_odometry is false -->
  <arg name="odom_frame_id"           default="/odom"/>              <!-- If set, TF is used to get odometry instead of the topic -->

  <arg name="namespace"               default="rtabmap"/>
  <arg name="wait_for_transform"      default="0.2"/>
  <arg name="queue_size"              default="100"/>
  
  	<!-- ROS navigation stack move_base -->
    <!-- <group ns="planner">
        <remap from="/rtabmap/octomap_ground" to="/planner_cloud"/>
        <remap from="base_scan" to="/base_scan"/>
        <remap from="map" to="/rtabmap/proj_map"/>
        <remap from="move_base_simple/goal" to="/planner_goal"/>
        
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    	  <rosparam file="$(find rtabmap_ros)/launch/azimut3/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
     	  <rosparam file="$(find rtabmap_ros)/launch/azimut3/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    	  <rosparam file="$(find rtabmap_ros)/launch/azimut3/config/local_costmap_params_3d.yaml" command="load" />
    	  <rosparam file="$(find rtabmap_ros)/launch/azimut3/config/global_costmap_params.yaml" command="load" ns="global_costmap"/>
    	  <rosparam file="$(find rtabmap_ros)/launch/azimut3/config/base_local_planner_params.yaml" command="load" />
   		</node>
   		
        <param name="cmd_vel/abtr_priority" value="10"/>
    </group> -->

	<!-- <group ns="/stereo_camera" > -->
	    <!-- <node pkg="nodelet" type="nodelet" name="stereo_nodelet"  args="manager"/> -->
		<!-- HACK: the fps parameter on camera1394stereo_node doesn't work for my camera!?!?
			 Throttle camera images -->
		<!-- <node pkg="nodelet" type="nodelet" name="stereo_throttle" args="load rtabmap_ros/stereo_throttle stereo_nodelet"> -->
			<!-- <remap from="left/image"       to="left/image_raw"/>
		    <remap from="right/image"      to="right/image_raw"/>
		    <remap from="left/camera_info" to="left/camera_info"/>
		    <remap from="right/camera_info" to="right/camera_info"/>
		    
		    <param name="queue_size" type="int" value="10"/>
		    <param name="rate" type="double" value="20"/>
		</node>
	
		<node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc">
			<remap from="left/image_raw"    to="left/image_raw_throttle"/>
			<remap from="left/camera_info"  to="left/camera_info_throttle"/>
			<remap from="right/image_raw"   to="right/image_raw_throttle"/>
			<remap from="right/camera_info" to="right/camera_info_throttle"/>
			<param name="disparity_range" value="128"/>
		</node> -->
		
		<!-- Create point cloud for the planner -->
		<!-- <node pkg="nodelet" type="nodelet" name="disparity2cloud" args="load rtabmap_ros/point_cloud_xyz stereo_nodelet">
			<remap from="disparity/image"       to="disparity"/>
			<remap from="disparity/camera_info" to="right/camera_info_throttle"/>
			<remap from="cloud"                 to="cloudXYZ"/>
			
			<param name="voxel_size" type="double" value="0.05"/>
			<param name="decimation" type="int" value="4"/>
			<param name="max_depth" type="double" value="4"/>
		</node>
		<node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection stereo_nodelet">
    			<remap from="cloud" to="cloudXYZ"/>
			<remap from="obstacles" to="/planner_cloud"/>

			<param name="frame_id" type="string" value="base_footprint"/>		
			<param name="map_frame_id" type="string" value="map"/>
			<param name="wait_for_transform" type="bool" value="true"/>
			<param name="min_cluster_size" type="int" value="20"/>
			<param name="max_obstacles_height" type="double" value="0.0"/>
  		</node>
	</group> -->

  <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
    <arg name="stereo"                  value="true"/>
    <arg name="rtabmapviz"              value="$(arg rtabmapviz)" /> 
    <arg name="rviz"                    value="$(arg rviz)" />
    <arg name="localization"            value="$(arg localization)"/>
    <arg name="gui_cfg"                 value="$(arg rtabmapviz_cfg)" />
    <arg name="rviz_cfg"                value="$(arg rviz_cfg)" />
  
    <arg name="frame_id"                value="$(arg frame_id)"/>
    <arg name="namespace"               value="$(arg namespace)"/>
    <arg name="database_path"           value="$(arg database_path)"/>
    <arg name="wait_for_transform"      value="$(arg wait_for_transform)"/>
    <arg name="rtabmap_args"            value="$(arg rtabmap_args)"/>  
    <arg name="launch_prefix"           value="$(arg launch_prefix)"/>          
    <arg name="approx_sync"             value="$(arg approx_sync)"/>

    <arg name="stereo_namespace"        value="$(arg stereo_namespace)"/>
    <arg name="left_image_topic"        value="$(arg left_image_topic)" />
    <arg name="right_image_topic"       value="$(arg right_image_topic)" />
    <arg name="left_camera_info_topic"  value="$(arg left_camera_info_topic)" />
    <arg name="right_camera_info_topic" value="$(arg right_camera_info_topic)" />
  
    <arg name="compressed"              value="$(arg compressed)"/>                                                                                
   
    <arg name="subscribe_scan"          value="$(arg subscribe_scan)"/>
    <arg name="scan_topic"              value="$(arg scan_topic)"/>
  
    <arg name="subscribe_scan_cloud"    value="$(arg subscribe_scan_cloud)"/>
    <arg name="scan_cloud_topic"        value="$(arg scan_cloud_topic)"/>
   
    <arg name="visual_odometry"         value="$(arg visual_odometry)"/>          
    <arg name="odom_topic"              value="$(arg odom_topic)"/>       
    <arg name="odom_frame_id"           value="$(arg odom_frame_id)"/>   
    <arg name="odom_args"               value="$(arg rtabmap_args)"/>
  </include>
<!-- 
<include file="navigation.launch">
</include> -->

</launch> -->
